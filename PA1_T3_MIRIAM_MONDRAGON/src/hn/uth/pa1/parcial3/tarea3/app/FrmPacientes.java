/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hn.uth.pa1.parcial3.tarea3.app;

import hn.uth.pa1.parcial3.tarea3.objetos.Pacientes;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author Miriam
 */
public class FrmPacientes extends javax.swing.JFrame {

    /**
     * Creates new form FrmPacientes
     */
    public FrmPacientes() {
        initComponents();
        refrescarTabla();
        btnRegresar.setVisible(false);
    }

    private void refrescarTabla() {
        try {
            tblPacientes.setModel(pacientesController.getTblPacientes());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al refrescar tabla" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        lblIdentidad = new javax.swing.JLabel();
        txtIdentidad = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        lblNombres = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        lblApellidos = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblDepto = new javax.swing.JLabel();
        lblMunicipio = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblSintomas = new javax.swing.JLabel();
        lblFechaIngreso = new javax.swing.JLabel();
        lblFechaNacimiento = new javax.swing.JLabel();
        txtDepartamento = new javax.swing.JTextField();
        txtMunicipio = new javax.swing.JTextField();
        txtSintomas = new javax.swing.JTextField();
        cmbEstado = new javax.swing.JComboBox<>();
        btnVerAsintomaticos = new javax.swing.JButton();
        btnVerEnfermos = new javax.swing.JButton();
        btnVerMuertos = new javax.swing.JButton();
        btnVerRecuperados = new javax.swing.JButton();
        txtDia = new javax.swing.JTextField();
        lblDia = new javax.swing.JLabel();
        lblMes = new javax.swing.JLabel();
        txtMes = new javax.swing.JTextField();
        lblAnio = new javax.swing.JLabel();
        txtAnio = new javax.swing.JTextField();
        lblDia1 = new javax.swing.JLabel();
        txtDia1 = new javax.swing.JTextField();
        lblMes1 = new javax.swing.JLabel();
        txtMes1 = new javax.swing.JTextField();
        txtAnio1 = new javax.swing.JTextField();
        lblAnio1 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        btnRegresar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro Pacientes");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(226, 226, 226));

        btnGuardar.setBackground(new java.awt.Color(204, 204, 204));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(204, 204, 204));
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBorrar.setBackground(new java.awt.Color(204, 204, 204));
        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        lblIdentidad.setText("Identidad:");

        txtIdentidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdentidadActionPerformed(evt);
            }
        });

        lblNombres.setText("Nombres:");

        lblApellidos.setText("Apellidos:");

        lblTelefono.setText("Teléfono:");

        lblDireccion.setText("Dirección:");

        lblDepto.setText("Departamento de Nacimiento:");

        lblMunicipio.setText("Municipio de Nacimiento:");

        lblEstado.setText("Estado:");

        lblSintomas.setText("Sintomas:");

        lblFechaIngreso.setText("Fecha de Ingreso:");

        lblFechaNacimiento.setText("Fecha de Nacimiento:");

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asintomático", "Enfermo", "Recuperado", "Muerto" }));

        btnVerAsintomaticos.setBackground(new java.awt.Color(204, 204, 204));
        btnVerAsintomaticos.setText("Ver Asintomaticos");
        btnVerAsintomaticos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerAsintomaticosActionPerformed(evt);
            }
        });

        btnVerEnfermos.setBackground(new java.awt.Color(204, 204, 204));
        btnVerEnfermos.setText("Ver Enfermos");
        btnVerEnfermos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerEnfermosActionPerformed(evt);
            }
        });

        btnVerMuertos.setBackground(new java.awt.Color(204, 204, 204));
        btnVerMuertos.setText("Ver Muertos");
        btnVerMuertos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerMuertosActionPerformed(evt);
            }
        });

        btnVerRecuperados.setBackground(new java.awt.Color(204, 204, 204));
        btnVerRecuperados.setText("Ver Recuperados");
        btnVerRecuperados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerRecuperadosActionPerformed(evt);
            }
        });

        lblDia.setText("Dia:");

        lblMes.setText("Mes:");

        lblAnio.setText("Año:");

        lblDia1.setText("Dia:");

        lblMes1.setText("Mes:");

        lblAnio1.setText("Año:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFechaNacimiento)
                    .addComponent(lblFechaIngreso)
                    .addComponent(lblSintomas)
                    .addComponent(lblApellidos)
                    .addComponent(lblIdentidad)
                    .addComponent(lblNombres)
                    .addComponent(lblTelefono)
                    .addComponent(lblDireccion)
                    .addComponent(lblDepto)
                    .addComponent(lblMunicipio)
                    .addComponent(lblEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(txtIdentidad)
                            .addComponent(txtApellidos)
                            .addComponent(txtTelefono))
                        .addGap(127, 127, 127)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDepartamento)
                            .addComponent(txtMunicipio)
                            .addComponent(cmbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSintomas)
                            .addComponent(txtDireccion)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblDia1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblMes1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMes1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnio1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAnio1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(lblDia)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblMes)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAnio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAnio)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnVerRecuperados, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVerAsintomaticos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVerEnfermos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVerMuertos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdentidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIdentidad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombres))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblApellidos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelefono)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addGap(11, 11, 11)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDireccion)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDepto)
                            .addComponent(txtDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMunicipio)
                            .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEstado)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSintomas)
                            .addComponent(txtSintomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFechaIngreso)
                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDia)
                            .addComponent(lblMes)
                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAnio)
                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDia1)
                                .addComponent(lblMes1)
                                .addComponent(txtMes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAnio1)
                                .addComponent(txtAnio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnVerAsintomaticos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerEnfermos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVerRecuperados, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVerMuertos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Identidad", "Nombres", "Apellidos", "Teléfono", "Dirección", "Departamento de Nacimiento", "Municipio de Nacimiento", "Estado", "Sintomas", "Fecha de Ingreso", "Fecha de Nacimiento", "Días en el Hospital"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPacientes);

        btnRegresar.setBackground(new java.awt.Color(204, 204, 204));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitulo.setText("Registro Pacientes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegresar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTitulo)
                        .addGap(730, 730, 730))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegresar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Pacientes getPacienteFormulario() throws Exception {
        String identidad = null;
        int digito = 0;
        try {
            char[] identidadDigitos = txtIdentidad.getText().toCharArray();
            for (int i = 0; i < identidadDigitos.length + 1; i++) {
                digito = identidadDigitos[i];
                i++;
                if (i != 13) {
                    identidad = null;
                } else {
                    identidad = txtIdentidad.getText();
                }
            }
            if (identidad == null) {
                throw new Exception("El número de identidad no es válido, debe ser un número de 13 digitos");
            }
        } catch (Exception e) {
            throw new Exception("El número de identidad no es válido, debe ser un número de 13 digitos");
        }
        String nombres = txtNombres.getText();
        String apellidos = txtApellidos.getText();
        String direccion = txtDireccion.getText();
        String telefono = null;

        try {
            char[] telefonoDigitos = txtTelefono.getText().toCharArray();
            if (telefonoDigitos.length == 8) {
                for (int i = 0; i < telefonoDigitos.length; i++) {
                    digito = telefonoDigitos[i];
                    i++;
                }
                telefono = txtTelefono.getText();
            } else {
                throw new Exception("El número de teléfono no es válido, debe ser un número de 8 dígitos");
            }
        } catch (Exception e) {
            throw new Exception("El número de teléfono no es válido, debe ser un número de 8 dígitos");
        }
        String departamento = txtDepartamento.getText();
        String municipio = txtMunicipio.getText();
        String estado = cmbEstado.getSelectedItem().toString();
        String sintomas = txtSintomas.getText();
        int dia = 0;
        int mes = 0;
        int anio = 0;
        int dia1 = 0;
        int mes1 = 0;
        int anio1 = 0;
        LocalDate fechaIngreso = null;
        LocalDate fechaNacimiento = null;
        Pacientes pacienteCampos = null;
        int fechaI = 0;
        int fechaN = 0;
        try {
            dia = Integer.parseInt(txtDia.getText());
            mes = Integer.parseInt(txtMes.getText());
            anio = Integer.parseInt(txtAnio.getText());

            dia1 = Integer.parseInt(txtDia1.getText());
            mes1 = Integer.parseInt(txtMes1.getText());
            anio1 = Integer.parseInt(txtAnio1.getText());
            try {
                fechaIngreso = LocalDate.of(anio, mes, dia);
                fechaNacimiento = LocalDate.of(anio1, mes1, dia1);
                String fechaIn = fechaIngreso.toString();
                String[] fechaArreglo = fechaIn.split("-");
                fechaI = Integer.valueOf(fechaArreglo[0] + fechaArreglo[1] + fechaArreglo[2]);
                String fechaNa = fechaNacimiento.toString();
                String[] fechaNacArreglo = fechaNa.split("-");
                fechaN = Integer.valueOf(fechaNacArreglo[0] + fechaNacArreglo[1] + fechaNacArreglo[2]);
            } catch (Exception e) {
                throw new Exception("Los datos de fecha ingresados no son validos");
            }
            if (identidad != null && telefono != null && fechaI != 0 && fechaN != 0) {
                pacienteCampos = new Pacientes(identidad, nombres, apellidos, direccion, telefono, departamento, municipio, estado, sintomas, fechaI, fechaN);
            }
        } catch (Exception e) {
            throw new Exception("Por favor revise que los campos de fecha esten llenados de forma correcta");
        }

        return pacienteCampos;
    }

    private void vaciarCampos() {
        txtIdentidad.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");
        txtTelefono.setText("");
        txtDireccion.setText("");
        txtDepartamento.setText("");
        txtMunicipio.setText("");
        txtSintomas.setText("");
        txtDia.setText("");
        txtMes.setText("");
        txtAnio.setText("");
        txtDia1.setText("");
        txtMes1.setText("");
        txtAnio1.setText("");
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        Pacientes paciente = null;
        try {
            paciente = getPacienteFormulario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Campos mal llenados", JOptionPane.ERROR_MESSAGE);
        }
        if (paciente != null) {
            try {
                pacientesController.guardarPaciente(paciente);
                JOptionPane.showMessageDialog(this, "Paciente registrado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El registro que desea crear ya existe, por favor trate de actualizarlo en lugar de crear uno nuevo",
                        "Registro ya Existente", JOptionPane.ERROR_MESSAGE);
            }
        }
        refrescarTabla();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        Pacientes paciente = null;
        try {
            paciente = getPacienteFormulario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Campos mal llenados", JOptionPane.ERROR_MESSAGE);
        }
        if (paciente != null) {
            try {
                pacientesController.modificarPaciente(paciente);
                JOptionPane.showMessageDialog(this, "Paciente modificado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El registro que desea modificar no existe, por favor trate de crearlo en lugar de actualizarlo",
                        "Registro no Existente", JOptionPane.ERROR_MESSAGE);
            }
        }
        refrescarTabla();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        Pacientes paciente = null;
        try {
            paciente = getPacienteFormulario();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Campos mal llenados", JOptionPane.ERROR_MESSAGE);
        }
        if (paciente != null) {
            try {
                pacientesController.eliminarPaciente(paciente);
                JOptionPane.showMessageDialog(this, "Paciente eliminado con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                vaciarCampos();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "El registro que desea eliminar no existe",
                        "Registro no Existente", JOptionPane.ERROR_MESSAGE);
            }
        }
        refrescarTabla();

    }//GEN-LAST:event_btnBorrarActionPerformed

    private void txtIdentidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdentidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdentidadActionPerformed

    private void tblPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPacientesMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = tblPacientes.getSelectedRow();

        String identidad = (String) tblPacientes.getValueAt(filaSeleccionada, 0);
        String nombres = (String) tblPacientes.getValueAt(filaSeleccionada, 1);
        String apellidos = (String) tblPacientes.getValueAt(filaSeleccionada, 2);
        String direccion = (String) tblPacientes.getValueAt(filaSeleccionada, 3);
        String telefono = (String) tblPacientes.getValueAt(filaSeleccionada, 4);
        String departamentoNacimiento = (String) tblPacientes.getValueAt(filaSeleccionada, 5);
        String municipioNacimiento = (String) tblPacientes.getValueAt(filaSeleccionada, 6);
        String estado = (String) tblPacientes.getValueAt(filaSeleccionada, 7);
        String sintomas = (String) tblPacientes.getValueAt(filaSeleccionada, 8);
        String fechaIngreso = (String) tblPacientes.getValueAt(filaSeleccionada, 9);
        String fechaNacimiento = (String) tblPacientes.getValueAt(filaSeleccionada, 10);
        String[] fechaI = fechaIngreso.split("-");
        String[] fechaN = fechaNacimiento.split("-");

        txtIdentidad.setText(identidad);
        txtNombres.setText(nombres);
        txtApellidos.setText(apellidos);
        txtDireccion.setText(direccion);
        txtTelefono.setText(telefono);
        txtDepartamento.setText(departamentoNacimiento);
        txtMunicipio.setText(municipioNacimiento);
        cmbEstado.setSelectedItem(estado);
        txtSintomas.setText(sintomas);
        txtDia.setText(String.valueOf(fechaI[2]));
        txtMes.setText(String.valueOf(fechaI[1]));
        txtAnio.setText(String.valueOf(fechaI[0]));
        txtDia1.setText(String.valueOf(fechaN[2]));
        txtMes1.setText(String.valueOf(fechaN[1]));
        txtAnio1.setText(String.valueOf(fechaN[0]));
    }//GEN-LAST:event_tblPacientesMouseClicked

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        refrescarTabla();
        btnRegresar.setVisible(false);
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnVerAsintomaticosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerAsintomaticosActionPerformed
        // TODO add your handling code here:
        String filtro = "Asintomático";
        try {
            tblPacientes.setModel(pacientesController.getTblPacientesFiltrados(filtro));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al refrescar tabla" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        btnRegresar.setVisible(true);
    }//GEN-LAST:event_btnVerAsintomaticosActionPerformed

    private void btnVerEnfermosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerEnfermosActionPerformed
        // TODO add your handling code here:
        String filtro = "Enfermo";
        try {
            tblPacientes.setModel(pacientesController.getTblPacientesFiltrados(filtro));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al refrescar tabla" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        btnRegresar.setVisible(true);
    }//GEN-LAST:event_btnVerEnfermosActionPerformed

    private void btnVerRecuperadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerRecuperadosActionPerformed
        // TODO add your handling code here:
        String filtro = "Recuperado";
        try {
            tblPacientes.setModel(pacientesController.getTblPacientesFiltrados(filtro));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al refrescar tabla" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        btnRegresar.setVisible(true);
    }//GEN-LAST:event_btnVerRecuperadosActionPerformed

    private void btnVerMuertosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerMuertosActionPerformed
        // TODO add your handling code here:
        String filtro = "Muerto";
        try {
            tblPacientes.setModel(pacientesController.getTblPacientesFiltrados(filtro));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al refrescar tabla" + ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        btnRegresar.setVisible(true);
    }//GEN-LAST:event_btnVerMuertosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnVerAsintomaticos;
    private javax.swing.JButton btnVerEnfermos;
    private javax.swing.JButton btnVerMuertos;
    private javax.swing.JButton btnVerRecuperados;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblAnio1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDepto;
    private javax.swing.JLabel lblDia;
    private javax.swing.JLabel lblDia1;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFechaIngreso;
    private javax.swing.JLabel lblFechaNacimiento;
    private javax.swing.JLabel lblIdentidad;
    private javax.swing.JLabel lblMes;
    private javax.swing.JLabel lblMes1;
    private javax.swing.JLabel lblMunicipio;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblSintomas;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtAnio1;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtDepartamento;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtDia1;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdentidad;
    private javax.swing.JTextField txtMes;
    private javax.swing.JTextField txtMes1;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtSintomas;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
